{
  "name": "js.ui",
  "version": "0.0.0",
  "description": "js.ui provides an idiomatic approach to creating UI code in vanilla JS. It is designed to address a set of specific shortcomings of JSX. Notably, JSX falls short on two fronts:   - The parameters API       - Klunky and difficult to specify types       - inabikity to pass on props wholesapce       - does not fit neatly with typescript's types   - Conditional rendering       - it inevitably ends up leading to errors       - TOD It does however handle some things that we need to manually account for   - Keys      - without JSX, we need to manually name every element in the UI tree      - JSX resolves this by auto-generating an incrementing number as key for every          child element that has no key",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/marcuswestin/js.ui.git"
  },
  "author": "Marcus Westin",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/marcuswestin/js.ui/issues"
  },
  "homepage": "https://github.com/marcuswestin/js.ui#readme",
  "peerDependencies": {
    "aphrodite": "^2.4.0",
    "mobx": "^6",
    "mobx-react-lite": "^3",
    "react": "^16",
    "react-dom": "^16",
    "react-native": "^0.63"
  },
  "devDependencies": {
    "@types/react": "^16",
    "@types/react-dom": "^16",
    "@types/react-native": "^0.63"
  }
}
